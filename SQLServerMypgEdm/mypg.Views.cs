//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.225
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets177E4ECAE1B227C2EFDC0C38F98EE07E6C47C450E746FB31D98A096A63707FCB))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// Тип содержит представления для наборов EntitySets и AssociationSets, созданные во время разработки.
    /// </Summary>
    public sealed class ViewsForBaseEntitySets177E4ECAE1B227C2EFDC0C38F98EE07E6C47C450E746FB31D98A096A63707FCB : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// Конструктор хранит представления для экстентов и значения хэша, созданные на основе замыканий и представлений метаданных и сопоставлений.
        /// </Summary>
        public ViewsForBaseEntitySets177E4ECAE1B227C2EFDC0C38F98EE07E6C47C450E746FB31D98A096A63707FCB()
        {
            this.EdmEntityContainerName = "mypgEntities";
            this.StoreEntityContainerName = "mypgModelStoreContainer";
            this.HashOverMappingClosure = "92978e64c981124d5c6687f25049be8315e358cac63356b6116ed692ad0df904";
            this.HashOverAllExtentViews = "d0fe44b2234605dd8d614a835c1a95d9aa34e6c4c7737faa37b8aca6b9afe562";
            this.ViewCount = 2;
        }
        
        /// <Summary>
        /// Метод возвращает представление для указанного индекса.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// возвратить представление для mypgModelStoreContainer.Mystrings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("mypgModelStoreContainer.Mystrings", @"
    SELECT VALUE -- Constructing Mystrings
        [mypgModel.Store.Mystrings](T1.Mystrings_Imystr, T1.Mystrings_Mystr)
    FROM (
        SELECT 
            T.Imystr AS Mystrings_Imystr, 
            T.Mystr AS Mystrings_Mystr, 
            True AS _from0
        FROM mypgEntities.Mystrings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// возвратить представление для mypgEntities.Mystrings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("mypgEntities.Mystrings", @"
    SELECT VALUE -- Constructing Mystrings
        [mypgModel.Mystrings](T1.Mystrings_Imystr, T1.Mystrings_Mystr)
    FROM (
        SELECT 
            T.Imystr AS Mystrings_Imystr, 
            T.Mystr AS Mystrings_Mystr, 
            True AS _from0
        FROM mypgModelStoreContainer.Mystrings AS T
    ) AS T1");
        }
    }
}
